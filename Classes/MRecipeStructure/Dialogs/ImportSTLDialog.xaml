<Window x:Class="MRecipeStructure.Dialogs.ImportSTLDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MRecipeStructure.Dialogs"
        mc:Ignorable="d"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:rcpClasses="clr-namespace:MRecipeStructure.Classes.MRecipeStructure"
        xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:stlUtils="clr-namespace:MRecipeStructure.Classes.MRecipeStructure.Utils"
        xmlns:mClasses="clr-namespace:MSolvLib.Classes;assembly=MSolvLib"
        xmlns:sharpGL="clr-namespace:SharpGL.WPF;assembly=SharpGL.WPF"
        xmlns:h="http://helix-toolkit.org/wpf"
        xmlns:HelixToolkit="clr-namespace:HelixToolkit.Wpf;assembly=HelixToolkit.Wpf"
        Title="Import STL" 
        Height="450" 
        Width="950"
        MinHeight="250"
        MinWidth="400"
        ShowInTaskbar="False"
        WindowStyle="ToolWindow"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterOwner" 
        FocusManager.FocusedElement="{Binding ElementName=InputFieldPatternFilePath}">
    <Grid>
        <Grid.Resources>
            <Style
                x:Key="BaseControl" TargetType="Control">
                <Setter Property="MinHeight" Value="30"/>
            </Style>

            <Style 
                x:Key="BaseActionButton"
                TargetType="Button"
                BasedOn="{StaticResource BaseControl}">
                <Setter Property="Margin" Value="1 0"/>
                <Setter Property="Height" Value="30"/>
            </Style>

            <Style 
                x:Key="BaseTextBox"
                TargetType="TextBox"
                BasedOn="{StaticResource BaseControl}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style 
                x:Key="BaseDoubleUpDown"
                TargetType="{x:Type xceed:DoubleUpDown}"
                BasedOn="{StaticResource BaseControl}">
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <Style 
                x:Key="BaseIntegerUpDown"
                TargetType="{x:Type xceed:IntegerUpDown}"
                BasedOn="{StaticResource BaseControl}">
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <HelixToolkit:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter" />

            <Style TargetType="{x:Type HelixToolkit:HelixViewport3D}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HelixToolkit:HelixViewport3D}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid FocusVisualStyle="{x:Null}">
                                    <HelixToolkit:CameraController
                                        x:Name="PART_CameraController"
                                        CameraMode="{TemplateBinding CameraMode}"
                                        CameraRotationMode="{TemplateBinding CameraRotationMode}"
                                        ChangeFieldOfViewCursor="{TemplateBinding ChangeFieldOfViewCursor}"
                                        DefaultCamera="{TemplateBinding DefaultCamera}"
                                        InertiaFactor="{TemplateBinding CameraInertiaFactor}"
                                        InfiniteSpin="{TemplateBinding InfiniteSpin}"
                                        IsChangeFieldOfViewEnabled="{TemplateBinding IsChangeFieldOfViewEnabled}"
                                        IsInertiaEnabled="{TemplateBinding IsInertiaEnabled}"
                                        IsMoveEnabled="{TemplateBinding IsMoveEnabled}"
                                        IsPanEnabled="{TemplateBinding IsPanEnabled}"
                                        IsRotationEnabled="{TemplateBinding IsRotationEnabled}"
                                        IsTouchZoomEnabled="{TemplateBinding IsTouchZoomEnabled}"
                                        IsZoomEnabled="{TemplateBinding IsZoomEnabled}"
                                        LeftRightPanSensitivity="{TemplateBinding LeftRightPanSensitivity}"
                                        LeftRightRotationSensitivity="{TemplateBinding LeftRightRotationSensitivity}"
                                        MaximumFieldOfView="{TemplateBinding MaximumFieldOfView}"
                                        MinimumFieldOfView="{TemplateBinding MinimumFieldOfView}"
                                        ModelUpDirection="{TemplateBinding ModelUpDirection}"
                                        PageUpDownZoomSensitivity="{TemplateBinding PageUpDownZoomSensitivity}"
                                        PanCursor="{TemplateBinding PanCursor}"
                                        RotateAroundMouseDownPoint="{TemplateBinding RotateAroundMouseDownPoint}"
                                        RotateCursor="{TemplateBinding RotateCursor}"
                                        RotationSensitivity="{TemplateBinding RotationSensitivity}"
                                        ShowCameraTarget="{TemplateBinding ShowCameraTarget}"
                                        UpDownPanSensitivity="{TemplateBinding UpDownPanSensitivity}"
                                        UpDownRotationSensitivity="{TemplateBinding UpDownRotationSensitivity}"
                                        ZoomAroundMouseDownPoint="{TemplateBinding ZoomAroundMouseDownPoint}"
                                        ZoomCursor="{TemplateBinding ZoomCursor}"
                                        ZoomRectangleCursor="{TemplateBinding ZoomRectangleCursor}"
                                        ZoomSensitivity="{TemplateBinding ZoomSensitivity}">
                                        <HelixToolkit:CameraController.InputBindings>
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ResetCameraCommand}" Gezture="{Binding ResetCameraKeyGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.RotateCommand}" Gezture="{Binding RotateGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.RotateCommand}" Gezture="{Binding RotateGesture2, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.PanCommand}" Gezture="{Binding PanGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.PanCommand}" Gezture="{Binding PanGesture2, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ZoomCommand}" Gezture="{Binding ZoomGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ZoomCommand}" Gezture="{Binding ZoomGesture2, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ZoomRectangleCommand}" Gezture="{Binding ZoomRectangleGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ChangeFieldOfViewCommand}" Gezture="{Binding ChangeFieldOfViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ChangeLookAtCommand}" Gezture="{Binding ChangeLookAtGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ZoomExtentsCommand}" Gezture="{Binding ZoomExtentsGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.ResetCameraCommand}" Gezture="{Binding ResetCameraGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.TopViewCommand}" Gezture="{Binding TopViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.BottomViewCommand}" Gezture="{Binding BottomViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.LeftViewCommand}" Gezture="{Binding LeftViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.RightViewCommand}" Gezture="{Binding RightViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.FrontViewCommand}" Gezture="{Binding FrontViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:CameraController.BackViewCommand}" Gezture="{Binding BackViewGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <HelixToolkit:InputBindingX Command="{x:Static HelixToolkit:HelixViewport3D.OrthographicToggleCommand}" Gezture="{Binding OrthographicToggleGesture, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </HelixToolkit:CameraController.InputBindings>
                                        <Grid x:Name="PART_ViewportGrid">
                                            <AdornerDecorator
                                                x:Name="PART_AdornerLayer"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                DataContext="{TemplateBinding DataContext}"
                                                IsHitTestVisible="False" />
                                            <!--  the main viewport3D is inserted here  -->
                                        </Grid>
                                    </HelixToolkit:CameraController>

                                    <!--  Coordinate system  -->
                                    <Viewport3D
                                        x:Name="PART_CoordinateView"
                                        Width="{TemplateBinding CoordinateSystemWidth}"
                                        Height="{TemplateBinding CoordinateSystemHeight}"
                                        Margin="0"
                                        HorizontalAlignment="{TemplateBinding CoordinateSystemHorizontalPosition}"
                                        VerticalAlignment="{TemplateBinding CoordinateSystemVerticalPosition}"
                                        ClipToBounds="False"
                                        IsHitTestVisible="False"
                                        Visibility="{TemplateBinding ShowCoordinateSystem,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <HelixToolkit:ArrowVisual3D Fill="#964B4B" Point2="8 0 0" />
                                        <HelixToolkit:ArrowVisual3D Fill="#4B964B" Point2="0 8 0" />
                                        <HelixToolkit:ArrowVisual3D Fill="#4B4B96" Point2="0 0 8" />

                                        <HelixToolkit:BillboardTextVisual3D
                                            Foreground="{Binding CoordinateSystemLabelForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                            Position="10 0 0"
                                            Text="{Binding CoordinateSystemLabelX, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <HelixToolkit:BillboardTextVisual3D
                                            Foreground="{Binding CoordinateSystemLabelForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                            Position="0 10 0"
                                            Text="{Binding CoordinateSystemLabelY, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <HelixToolkit:BillboardTextVisual3D
                                            Foreground="{Binding CoordinateSystemLabelForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                            Position="0 0 10"
                                            Text="{Binding CoordinateSystemLabelZ, RelativeSource={RelativeSource TemplatedParent}}" />

                                        <!--<local:PieSliceVisual3D Normal="1,0,0" UpVector="0,0,1" InnerRadius="3" OuterRadius="6"  Fill="#80ff0000"/>
                                        <local:PieSliceVisual3D Normal="0,1,0" UpVector="1,0,0" InnerRadius="3" OuterRadius="6"  Fill="#8000ff00"/>
                                        <local:PieSliceVisual3D Normal="0,0,1" UpVector="0,1,0" InnerRadius="3" OuterRadius="6"  Fill="#800000ff"/>-->
                                    </Viewport3D>


                                    <Grid IsHitTestVisible="False">
                                        <!--  Titles  -->
                                        <StackPanel
                                            Margin="5"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Background="{TemplateBinding TitleBackground}">
                                            <TextBlock
                                                FontFamily="{TemplateBinding TitleFontFamily}"
                                                FontSize="{TemplateBinding TitleSize}"
                                                FontWeight="Bold"
                                                Foreground="{TemplateBinding TextBrush}"
                                                Text="{TemplateBinding Title}"
                                                Visibility="{TemplateBinding Title,
                                                                             Converter={StaticResource NotNullToVisibilityConverter}}" />
                                            <TextBlock
                                                FontFamily="{TemplateBinding TitleFontFamily}"
                                                FontSize="{TemplateBinding SubTitleSize}"
                                                Foreground="{TemplateBinding TextBrush}"
                                                Text="{TemplateBinding SubTitle}"
                                                Visibility="{TemplateBinding SubTitle,
                                                                             Converter={StaticResource NotNullToVisibilityConverter}}" />
                                        </StackPanel>

                                        <StackPanel
                                            Margin="6"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            Background="{TemplateBinding InfoBackground}">
                                            <TextBlock
                                                Padding="4"
                                                HorizontalAlignment="Left"
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding FrameRateText}"
                                                Visibility="{TemplateBinding ShowFrameRate,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock
                                                Padding="4"
                                                HorizontalAlignment="Right"
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding FieldOfViewText}"
                                                Visibility="{TemplateBinding ShowFieldOfView,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock
                                                HorizontalAlignment="Right"
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding Status}"
                                                Visibility="{TemplateBinding Status,
                                                                             Converter={StaticResource NotNullToVisibilityConverter}}" />
                                        </StackPanel>

                                        <StackPanel
                                            Margin="6"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Bottom"
                                            Background="{TemplateBinding InfoBackground}">
                                            <TextBlock
                                                Padding="4"
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding CameraInfo}"
                                                Visibility="{TemplateBinding ShowCameraInfo,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock
                                                Padding="4"
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding TriangleCountInfo}"
                                                Visibility="{TemplateBinding ShowTriangleCountInfo,
                                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock
                                                Foreground="{TemplateBinding InfoForeground}"
                                                Text="{TemplateBinding DebugInfo}"
                                                Visibility="{TemplateBinding DebugInfo,
                                                                             Converter={StaticResource NotNullToVisibilityConverter}}" />
                                        </StackPanel>
                                    </Grid>

                                    <Viewport3D
                                        x:Name="PART_ViewCubeViewport"
                                        Width="{TemplateBinding ViewCubeWidth}"
                                        Height="{TemplateBinding ViewCubeHeight}"
                                        Margin="0"
                                        HorizontalAlignment="{TemplateBinding ViewCubeHorizontalPosition}"
                                        VerticalAlignment="{TemplateBinding ViewCubeVerticalPosition}"
                                        Opacity="0.5"
                                        Visibility="{TemplateBinding ShowViewCube,
                                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <HelixToolkit:ViewCubeVisual3D
                                            x:Name="PART_ViewCube"
                                            BackText="{Binding ViewCubeBackText, RelativeSource={RelativeSource TemplatedParent}}"
                                            BottomText="{Binding ViewCubeBottomText, RelativeSource={RelativeSource TemplatedParent}}"
                                            EnableEdgeClicks="{Binding IsViewCubeEdgeClicksEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                            FrontText="{Binding ViewCubeFrontText, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{Binding IsRotationEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                            LeftText="{Binding ViewCubeLeftText, RelativeSource={RelativeSource TemplatedParent}}"
                                            ModelUpDirection="{Binding ModelUpDirection, RelativeSource={RelativeSource TemplatedParent}}"
                                            RightText="{Binding ViewCubeRightText, RelativeSource={RelativeSource TemplatedParent}}"
                                            TopText="{Binding ViewCubeTopText, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Viewport3D>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>

            <TabControl>
                <TabItem>
                    <TabItem.Header>
                        <TextBlock 
                        Text="General"/>
                    </TabItem.Header>

                    <ScrollViewer
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Disabled">

                        <StackPanel>
                            <!--pattern file-->
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Pattern File"/>

                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="40" Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox
                                    IsReadOnly="True"
                                    TextWrapping="Wrap"
                                    x:Name="InputFieldPatternFilePath"
                                    Text="{Binding Path=PatternFilePath, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background" Value="Gray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                                <Button
                                    Grid.Column="1"
                                    Cursor="Hand"
                                    Command="{Binding SelectPatternFileCommand}"
                                    Content="{materialDesign:PackIcon Kind=FileOutline}"/>
                            </Grid>

                            <!--process mode-->
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Process Configuration"/>

                            <ComboBox
                                DisplayMemberPath="Name.Value"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource BaseControl}"
                                SelectedItem="{Binding TargetProcessMode}"
                                ItemsSource="{Binding AvailableProcessModes, UpdateSourceTrigger=PropertyChanged}"/>


                            <!--marking parameters-->
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Marking Parameters"/>

                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="40" Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox
                                    IsReadOnly="True"
                                    TextWrapping="Wrap"
                                    Text="{Binding Path=ProcessParametersFilePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background" Value="Gray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                                <Button
                                    Grid.Column="1"
                                    Cursor="Hand"
                                    Command="{Binding SelectParametersFileCommand, UpdateSourceTrigger=PropertyChanged}"
                                    Content="{materialDesign:PackIcon Kind=FileOutline}"/>
                            </Grid>

                            <!--z step/pitch-->
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Slice Pitch (mm)"/>

                            <xceed:DoubleUpDown
                                Style="{StaticResource BaseDoubleUpDown}"
                                Minimum="0.001"
                                Value="{Binding SliceThickness, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                        </StackPanel>

                    </ScrollViewer>
                </TabItem>

                <!--hatch settings-->
                <TabItem>
                    <TabItem.Resources>
                        <ObjectDataProvider
                            x:Key="HatchStyleEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                            <ObjectDataProvider.MethodParameters>
                                <x:Type TypeName="stlUtils:HatchStyle"/>
                            </ObjectDataProvider.MethodParameters>
                        </ObjectDataProvider>
                    </TabItem.Resources>
                    
                    <TabItem.Header>
                        <TextBlock Text="Hatch Settings"/>
                    </TabItem.Header>

                    <ScrollViewer
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Auto">
                        <StackPanel>
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Hatch Pitch (mm)"/>

                            <xceed:DoubleUpDown
                                Minimum="0.001"
                                Style="{StaticResource BaseDoubleUpDown}"
                                Value="{Binding HatchSettings.Pitch, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Hatch Angle (deg)"/>

                            <xceed:DoubleUpDown
                                Style="{StaticResource BaseDoubleUpDown}"
                                Minimum="0"
                                Maximum="360"
                                Value="{Binding HatchSettings.Angle, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Hatch Style"/>

                            <ComboBox
                                VerticalContentAlignment="Center"
                                Style="{StaticResource BaseControl}"
                                ItemsSource="{Binding Source={StaticResource HatchStyleEnum}}"
                                SelectedItem="{Binding HatchSettings.Style, UpdateSourceTrigger=PropertyChanged}"/>

                            <CheckBox
                                Margin="0 10 0 3"
                                Content="Invert Hatched Area"
                                Style="{StaticResource BaseControl}"
                                IsChecked="{Binding HatchSettings.Invert, UpdateSourceTrigger=PropertyChanged}"/>

                            <UniformGrid
                                Rows="1"
                                Margin="0 10 0 0">
                                <Button
                                    Width="Auto"
                                    Margin="1 0"
                                    Content="HATCH CURRENT LAYER"
                                    Style="{StaticResource BaseActionButton}"
                                    Command="{Binding HatchCurrentLayerCommand}"/>

                                <Button
                                    Width="Auto"
                                    Margin="1 0"
                                    Content="HATCH ALL LAYERS"
                                    Style="{StaticResource BaseActionButton}"
                                    Command="{Binding HatchAllLayersCommand}"/>
                            </UniformGrid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>


                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="Tile Settings"/>
                    </TabItem.Header>

                    <ScrollViewer
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Auto">
                        <StackPanel>
                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Tile Size X and Y (mm)"/>

                            <UniformGrid
                                Rows="1">
                                <xceed:DoubleUpDown
                                    Minimum="5"
                                    Margin="1 0"
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Value="{Binding TileSettings.XSize, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                                <xceed:DoubleUpDown
                                    Minimum="5"
                                    Margin="1 0"
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Value="{Binding TileSettings.YSize, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>
                            </UniformGrid>

                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Tile Padding X and Y (mm)"/>

                            <UniformGrid
                                Rows="1">
                                <xceed:DoubleUpDown
                                    Margin="1 0"
                                    Minimum="0"
                                    Maximum="15"
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Value="{Binding TileSettings.XPadding, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                                <xceed:DoubleUpDown
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Margin="1 0"
                                    Minimum="0"
                                    Maximum="15"
                                    Value="{Binding TileSettings.YPadding, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>
                            </UniformGrid>

                            <TextBlock
                                Margin="0 10 0 3"
                                Text="Tile Extension (mm)"/>

                            <xceed:DoubleUpDown
                                Minimum="0"
                                Style="{StaticResource BaseDoubleUpDown}"
                                Value="{Binding TileSettings.Extension, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                            <TextBlock
                                Margin="0 20 0 3"
                                Text="Tile Centre Offset X and Y (mm)"/>

                            <UniformGrid
                                Rows="1">
                                <xceed:DoubleUpDown
                                    Margin="1 0"
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Value="{Binding TileSettings.XOffset, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>

                                <xceed:DoubleUpDown
                                    Style="{StaticResource BaseDoubleUpDown}"
                                    Margin="1 0"
                                    Value="{Binding TileSettings.YOffset, UpdateSourceTrigger=PropertyChanged, StringFormat=0.000, FallbackValue=0.000}"/>
                            </UniformGrid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="Alignment Settings"/>
                    </TabItem.Header>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel
                            Orientation="Horizontal"
                            HorizontalAlignment="Right">
                            <StackPanel.Resources>
                                <ObjectDataProvider
                                    x:Key="AlignmentTypeEnum"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                                    <ObjectDataProvider.MethodParameters>
                                        <x:Type TypeName="rcpClasses:MAlignmentType"/>
                                    </ObjectDataProvider.MethodParameters>
                                </ObjectDataProvider>
                            </StackPanel.Resources>

                            <TextBlock
                                Margin="0 0 3 0"
                                Text="Type: "
                                VerticalAlignment="Center"/>

                            <ComboBox
                                MinWidth="100"
                                Margin="0 0 9 0"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource BaseControl}"
                                ItemsSource="{Binding Source={StaticResource AlignmentTypeEnum}}"
                                SelectedItem="{Binding AlignmentType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Button
                                Content="ADD"
                                MinWidth="90"
                                Margin="0 0 1.5 0"
                                Style="{StaticResource BaseActionButton}"
                                Command="{Binding AddFiducialCommand}"/>

                            <Button
                                MinWidth="90"
                                Margin="1.5 0 3 0"
                                Content="DELETE ALL"
                                Style="{StaticResource BaseActionButton}"
                                Command="{Binding DeleteAllFiducialsCommand}"/>

                        </StackPanel>

                        <DataGrid
                            Grid.Row="1"
                            Margin="0 2.5"
                            CanUserAddRows="False"
                            CanUserSortColumns="True"
                            AutoGenerateColumns="False"
                            VerticalScrollBarVisibility="Auto"
                            HorizontalScrollBarVisibility="Auto"
                            ItemsSource="{Binding Fiducials}">

                            <DataGrid.Resources>
                                <mClasses:BindingProxy x:Key="proxy" Data="{Binding}" />
                            </DataGrid.Resources>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn
                                    Header="#"
                                    Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                MinWidth="30"
                                                Padding="7 0"
                                                VerticalAlignment="Center"
                                                Text="{Binding Index, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn
                                    Width="1*"
                                    Header="CAD X (mm)">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <xceed:DoubleUpDown
                                                Style="{StaticResource BaseDoubleUpDown}"
                                                Value="{Binding X, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn
                                    Width="1*"
                                    Header="CAD Y (mm)">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <xceed:DoubleUpDown
                                                Style="{StaticResource BaseDoubleUpDown}"
                                                Value="{Binding Y, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn
                                    Width="50"
                                    Header="">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Width="40"
                                                Foreground="Red"
                                                Content="{materialDesign:PackIcon Kind=Clear}"
                                                Margin="3"
                                                ToolTip="Delete fiducial"
                                                CommandParameter="{Binding}"
                                                Style="{StaticResource BaseActionButton}"
                                                Command="{Binding DeleteFiducialCommand}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>

                        </DataGrid>
                    </Grid>
                </TabItem>
            </TabControl>

            <!--CAD View-->
            <TabControl
                Grid.Column="1">
                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="2D Slices"/>
                    </TabItem.Header>

                    <Grid
                        Grid.Column="1"
                        Background="Black">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <sharpGL:OpenGLControl
                            x:Name="GLControlView"
                            MouseMove="OpenGLControl_MouseMove"
                            Resized="OpenGLControl_Resized"
                            MouseWheel="OpenGLControl_MouseWheel"
                            OpenGLInitialized="OpenGLControl_OpenGLInitialized"
                            OpenGLDraw="OpenGLControl_OpenGLDraw"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border
                                Margin="1"
                                Background="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom">

                                <StackPanel
                                    Margin="5"
                                    Orientation="Horizontal">
                                    <Button
                                        MinWidth="40"
                                        Style="{StaticResource BaseActionButton}"
                                        Command="{Binding ShowPreviousSliceCommand}"
                                        Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=25}"/>
                                    <Button
                                        MinWidth="40"
                                        Style="{StaticResource BaseActionButton}"
                                        Command="{Binding ShowNextSliceCommand}"
                                        Content="{materialDesign:PackIcon Kind=ArrowRight, Size=25}"/>

                                    <TextBlock
                                        MinWidth="100"
                                        FontSize="16"
                                        Margin="5 0"
                                        TextAlignment="Center"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} of {1}">
                                                <Binding Path="CurrentSlice" FallbackValue="0"/>
                                                <Binding Path="NumberOfSlicesIndicator" FallbackValue="0"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </Border>

                            <UniformGrid
                                Rows="1"
                                Grid.Column="1">

                                <UniformGrid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="FontFamily" Value="Consolas"/>
                                        <Setter Property="Foreground" Value="Yellow"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                    </Style>
                                </UniformGrid.Resources>

                                <StackPanel
                                    VerticalAlignment="Center">
                                    <TextBlock
                                        Text="Count"
                                        TextAlignment="Center"/>

                                    <TextBlock
                                        Grid.Column="1"
                                        TextAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}">
                                                <Binding Path="SliceCount" FallbackValue="0"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel
                                    VerticalAlignment="Center">
                                    <TextBlock
                                        Text="Size (mm)"
                                        TextAlignment="Center"/>

                                    <TextBlock
                                        Grid.Column="1"
                                        TextAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} x {1}">
                                                <Binding Path="SliceXSize" FallbackValue="0"/>
                                                <Binding Path="SliceYSize" FallbackValue="0"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>

                                <StackPanel
                                    VerticalAlignment="Center">
                                    <TextBlock
                                        Text="Cursor (mm)"
                                        TextAlignment="Center"/>

                                    <TextBlock
                                        Grid.Column="1"
                                        TextAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0} x {1}">
                                                <Binding Path="MouseX" FallbackValue="0"/>
                                                <Binding Path="MouseY" FallbackValue="0"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </UniformGrid>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem>
                    <TabItem.Header>
                        <TextBlock Text="STL"/>
                    </TabItem.Header>

                    <h:HelixViewport3D
                        x:Name="StlViewport"
                        Background="White"
                        ShowTriangleCountInfo="True"
                        ZoomExtentsWhenLoaded="True"
                        ZoomAroundMouseDownPoint="True"
                        RotateAroundMouseDownPoint="True"
                        IsViewCubeEdgeClicksEnabled="True">

                        <ModelVisual3D
                            Content="{Binding ThreeDeeModel}"/>

                        <h:SunLight/>

                        <!--  You can also add elements here in the xaml  -->
                        <HelixToolkit:GridLinesVisual3D
                            Center="{Binding GridLinesOrigin}"
                            Width="{Binding GridLinesSize}"
                            Length="{Binding GridLinesSize}"
                            MajorDistance="{Binding GridLinesGridPitch}"
                            MinorDistance="{Binding GridLinesGridPitch}"
                            Thickness="{Binding GridLinesGridThickness}" />
                    </h:HelixViewport3D>
                </TabItem>
            </TabControl>
        </Grid>

        <Grid
            Margin="5"
            Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button
                Width="100"
                Content="Refresh"
                HorizontalAlignment="Left"
                Command="{Binding RefreshCommand}"
                Style="{StaticResource BaseActionButton}"/>

            <StackPanel 
                Orientation="Horizontal"
                HorizontalAlignment="Right">
                <Button
                    Width="100"
                    IsCancel="True"
                    Content="Cancel"
                    Margin="0 0 1.5 0"
                    Style="{StaticResource BaseActionButton}"/>

                <Button
                    Width="100"
                    Content="OK"
                    Name="okButton"
                    IsDefault="True"
                    Margin="1.5 0 0 0"
                    Click="okButton_Click"
                    Style="{StaticResource BaseActionButton}"/>
            </StackPanel>

        </Grid>
    </Grid>
</Window>
